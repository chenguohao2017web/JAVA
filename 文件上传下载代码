pom.xml----------------
<!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
<dependency>
  <groupId>commons-fileupload</groupId>
  <artifactId>commons-fileupload</artifactId>
  <version>1.3.1</version>
</dependency>

	@Value("${webUploadPath}")
	String webUploadPath;
	
	#文件上传方法
	@PostMapping("/upload")
	public String test(@RequestParam(value="file") MultipartFile file,
					   HttpServletRequest req,
					   Model model) {
		//判断文件不为空
		if (!file.isEmpty()) {
			//获取上传文件路径
			//String path = req.getServletContext().getRealPath("classpath:/static/upload/");
			String fileName = System.currentTimeMillis() + "_" + file.getOriginalFilename();
			File filepath = new File(webUploadPath);
			//判断路径是否存在
			if(!filepath.exists()) {
				filepath.mkdirs();
			}
			try {
				file.transferTo(new File(filepath, fileName));
				model.addAttribute("msg", "上传文件成功");
				return "success";
			} catch (Exception e) {
				System.err.println("上传文件失败");
				e.printStackTrace();
			}
		}
		return null;
	}
	
  #获取文件列表
	@GetMapping("/downList")
	public String list(Model model) {
		//查询所有文件
		File filePath = new File(webUploadPath);
		File[] listFiles = filePath.listFiles();
		List<String> list = new ArrayList<>();
		if(listFiles.length > 0) {
			for (File file : listFiles) {
				list.add(file.getName());
			}
		}
		model.addAttribute("list", list);
		return "downList";
	}
	
  #文件流下载方法
	@GetMapping("/down/{fileName}")
	public ResponseEntity<byte[]> downLoad(@PathVariable String fileName,
										   @RequestHeader("User-Agent") String userAgent) {
		File file = new File(webUploadPath, fileName);
		BodyBuilder builder = ResponseEntity.ok();
		builder.contentLength(file.length());
		builder.contentType(MediaType.APPLICATION_OCTET_STREAM);
		try {
			fileName = URLEncoder.encode(fileName, "UTF-8");
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		if (userAgent.indexOf("MSIE") > 0) {
			// IE
			builder.header("Content-Disposition", "attachment;filename=" + fileName);
		}else {
			// CHROME
			builder.header("Content-Disposition", "attachment;filename*=UTF-8''" + fileName);
		}
		try {
			return builder.body(FileUtils.readFileToByteArray(file));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}
}
